#  SPDX-License-Identifier: BSD-2-Clause
# 
#  Copyright (C) 2019 On-Line Applications Research Corporation (OAR)
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.

This test exercises the MMU API using the RTPS/TRCH-to-HPPS MMU with its
page table located in HPPS DRAM. Three subtests test different mappings of the
MMU.

One subtest maps a 32-bit virtual address in HPPS DDR-Low region to a different 32-bit physical address in the same region. The test then writes a 32-bit value to the virtual address, disables the MMU, then reads a 32-bit value from the physical address. The values should be the same.

Another subtest writes a 32-bit value to a 32-bit physical address then maps a
32-bit virtual address in HPPS DDR-Low region to a different 32-bit physical
address in the same region. The test then reads a 32-bit value from the virtual address. The values should be the same.

The third subtest creates a mapping from a virtual write address to a physical
address, writes data to the virtual write address then destroys the mapping.
The subtest then maps a virtual read address to a physical address and reads
the virtual read address, checking if the data is the same.

