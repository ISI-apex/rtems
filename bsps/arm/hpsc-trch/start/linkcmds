MEMORY {
    SRAM :          ORIGIN = 0x00000000, LENGTH = 0x0ff000
    SRAM_BOOT_CFG : ORIGIN = 0x000ff000, LENGTH = 0x001000

    PERIPH (RW) :         ORIGIN = 0x24000000, LENGTH = 0x1c000000

    /* Split only to place at same place as U-boot (the higher half) */
    RTPS_DDR_LOW_0 (RWX): ORIGIN = 0x40000000, LENGTH = 0x30000000
    RTPS_DDR_LOW_1 (RWX): ORIGIN = 0x70000000, LENGTH = 0x4e000000
}

REGION_ALIAS ("REGION_START",          SRAM);
REGION_ALIAS ("REGION_VECTOR",         SRAM);
REGION_ALIAS ("REGION_TEXT",           SRAM);
REGION_ALIAS ("REGION_TEXT_LOAD",      SRAM);
REGION_ALIAS ("REGION_RODATA",         SRAM);
REGION_ALIAS ("REGION_RODATA_LOAD",    SRAM);
REGION_ALIAS ("REGION_DATA",           SRAM);
REGION_ALIAS ("REGION_DATA_LOAD",      SRAM);
REGION_ALIAS ("REGION_FAST_TEXT",      SRAM);
REGION_ALIAS ("REGION_FAST_TEXT_LOAD", SRAM);
REGION_ALIAS ("REGION_FAST_DATA",      SRAM);
REGION_ALIAS ("REGION_FAST_DATA_LOAD", SRAM);
REGION_ALIAS ("REGION_BSS",            SRAM);
REGION_ALIAS ("REGION_WORK",           SRAM);
REGION_ALIAS ("REGION_STACK",          SRAM);
REGION_ALIAS ("REGION_NOCACHE",        SRAM);
REGION_ALIAS ("REGION_NOCACHE_LOAD",   SRAM);

bsp_vector_table_in_start_section = 1;

INCLUDE linkcmds.armv7m

/* All the start/end symbols need to be 64-byte aligned for MPU */
SECTIONS
{
   __rtps_ddr_low_0_start__ = ORIGIN(RTPS_DDR_LOW_0);
   __rtps_ddr_low_0_end__ = ORIGIN(RTPS_DDR_LOW_0) + LENGTH(RTPS_DDR_LOW_0) - 64;
   __rtps_ddr_low_1_start__ = ORIGIN(RTPS_DDR_LOW_1);
   __rtps_ddr_low_1_end__ = ORIGIN(RTPS_DDR_LOW_1) + LENGTH(RTPS_DDR_LOW_1) - 64;
   __rtps_ddr_low_1_end_buffer__ = ORIGIN(RTPS_DDR_LOW_1) + LENGTH(RTPS_DDR_LOW_1) - 64 + 0x2000000;
   __periph_start__ = ORIGIN(PERIPH);
   __periph_end__ = ORIGIN(PERIPH) + LENGTH(PERIPH) - 64;
}
